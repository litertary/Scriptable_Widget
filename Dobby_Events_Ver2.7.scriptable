{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-brown",
    "glyph" : "socks"
  },
  "name" : "𝗗𝗼𝗯𝗯𝘆 𝗘𝘃𝗲𝗻𝘁𝘀 𝗩𝗲𝗿𝟮.𝟳",
  "script" : "\/\/ 📵🚫🚫\nconst CALENDAR_URL = \"\"\n\n\/\/ FileManager\nlet fm = FileManager.iCloud()\nlet path = fm.documentsDirectory()+\"\/\"\n\n\n\n\/\/ 🧦𝗗𝗼𝗯𝗯𝘆 𝗶𝘀 𝗙𝗿𝗲𝗲 𝗪𝗶𝗱𝗴𝗲𝘁 \n\/\/ 🧙‍♀️🦉🐈𝙷𝚊𝚛𝚛𝚢 𝙻 𝙿𝚘𝚝𝚝𝚎𝚛 \n\/\/ 원본 위젯 이름 : events & reminder (Tiberiu)\n\/\/ 🪧📅✨ 위젯에 수정사항이 많고 이름을 편하게 부르고자\n\/\/ 📱✅🔖 도비 위젯으로 명명하였습니다! \n\n\/\/ 설명을 보면서 큰 따옴표 안의 내용 또는 숫자를 바꾸면\n\/\/ 위젯의 설정을 싑게 변경할 수 있도록 위쪽으로 설정사항을\n\/\/ 배치두었습니다! \n\n\/\/ ❤️초기 설정 시, 📅캘린더와 ✅리마인더의 이름을 넣어야 \n\/\/ 📅해당 캘린더와 ✅리마인더의 일정을 가져옵니다\n\n\/\/ ❤️🧡💛💚💙💜행복한 위젯 생활 되세요 :)\n\n\/\/ 🧦📱🪧🔖 위젯 설정사항 ✊🏻📅💌✨\n\n\/\/ 📱📱🪧📋 배경화면 모드 선택 \nconst bgMode = \"color\"\n\/\/ \"color\" 컬러 지정 \n\/\/ \"image\" 이미지 지정 \n\/\/ ✨✨𝙎𝙘𝙧𝙞𝙥𝙩𝙖𝙗𝙡𝙚 앱에서 북마크 지정한 이미지 이름\nconst bgname = \"image\"\n\/\/ ✨✨ 원하는 배경 색상 \n\/\/ #ffffff = 화이트, #000000 = 블랙\nconst BACKGROUND_COLOR = new Color(\"#000000\")\n\n\/\/ 📱📱📱 미리보기 지원\nconst TEST_MODE = true\n\n\/\/ 🪧📱🖥 미리보기 사이즈 (미디엄 라지 수정)\nconst Mode_size = \"Medium\" \/\/ Medium Large\n\n\n\/\/ 📱📱📱🔖✊🏻✋🏻🤚🏻 위젯 모드 설정\nconst mode = \"normal\" \/\/ normal right left\n\/\/ ✊🏻 \"normal\" : 일정 아래 날짜\n\/\/ ▐ 은행 업무\n\/\/   08\/19(월) 10:00-11:00\n\/\/ ▐ 병원 방문\n\/\/   08\/21(수) 14:00-15:00\n\n\/\/ 🤚🏻 \"right\" 왼쪽에 일정 이름, 오른쪽 날짜\n\/\/  ▐ 은행 업무   08\/19(월) 10:00-11:00 \n\/\/  ▐ 병원 방문   08\/21(수) 14:00-15:00  \n\n\/\/ ✋🏻 \"left\" 왼쪽에 날짜, 오른쪽에 일정 이름\n\/\/   08\/19(월) 10:00-11:00  ▐ 은행 업무\n\/\/   08\/21(수) 14:00-15:00  ▐ 병원 방문\n\n\n\/\/ 🖥⌚️🌸🌟 좌측 상단에 나오는 이름\nconst YOUR_NAME = \"헤르미온느\"\n\n\/\/ 🖇🔖💌 상단 메시지 시간대별 문구 설정\nfunction getGreeting() {\n    let greeting = \"Good \"\n    if (NOW.getHours() < 6) {\n        greeting = greeting + \"night, \"\n    } else if (NOW.getHours() < 12) {\n        greeting = greeting + \"morning, \"\n    } else if (NOW.getHours() < 17) {\n        greeting = greeting + \"afternoon, \"\n    } else if (NOW.getHours() < 21) {\n        greeting = greeting + \"evening, \"\n    } else {\n        greeting = greeting + \"night, \"\n    }\n    return greeting + YOUR_NAME + \"\"\n}\n\n\/\/ 🪧💌📋 좌측 상단 메시지 텍스트 크기 & 폰트\nconst GREETING_SIZE = 15\nconst GREETING_FONT = \"DX유니고딕 70\"\n\n\/\/ 🔖💌🌸 좌측 상단 메시지 컬러\nconst GREETING_COLOR = new Color(\"#ffffff\")\n\n\/\/ 📅🕔🕖 우측 상단 날짜 텍스트 크기 & 폰트\nconst DateSize = 14\nconst DateFont = \"DX유니고딕 70\"\n\n\/\/ 📪📫📬 우측 상단 날짜 텍스트 컬러 \nconst DATE_COLOR = new Color(\"#ffffff\")\n\n\/\/ 🪧🔖🕓 우측 상단 날짜 포맷\nconst dateFormat = \"MMM d일 (E)\"\n\n\/\/ 🌅🌄🌇🌌 날짜 포맷 참고\n\/\/ 월 : M (1, 2, ... 10, 12)\n\/\/ MM (01, 02) MMM(1월, 2월...) MMMM MMMMM \n\/\/ 일 : d dd \n\/\/ 요일 : E EE(월, 화, 수 ...) EEEE EEEEE \n\n\n\n\n\/\/ ✨✨‼️‼️캘린더 이름을 정확하게 넣어야 합니다‼️‼️\n\/\/ 지나간 일정은 보이지 않습니다\n\/\/ 🔖📅🪧 표시하고 싶은 캘린더 & 리마인더 이름 넣기 \n\/\/ 예시 [\"Calendar\", \"Day\", \"Study\", \"대한민국 공휴일\", dobbyisfree@gmail.com\"]\nconst VISIBLE_CALENDARS = [\"Calendar\"]\n\/\/ 예시 [\"개인\", \"약속\", \"할 일\", \"Reminder\"]\nconst VISIBLE_REMINDERS = [\"Reminder\"]\n\n\n\/\/ ✨📅📒일정 눌렀을 때, 열고 싶은 앱 \n\/\/ 애플 캘린더 해당 일정 날짜 이동으로 기본 설정\nconst appURL = \"calshow:\" \/\/ \n\/\/ ✨📅✅ 리마인더 눌렀을 때, 열고 싶은 앱\nconst REMINDERS_URL = \"x-apple-reminderkit:\/\/\" \n\n\n\n\/\/ ❤️🧡💛💚💙💜 일정 ▐ □ & 일정 이름 컬러 지정 \n\/\/ 캘린더 색상 설정입니다\nconst CALENDAR_COLORS = {\n    \/\/ \"캘린더 이름\": new Color(\"원하는 색 코드\")\n    \"Calendar\": new Color(\"#ff9100\"),\n    \n\n    \"edu\": new Color(\"#3f51b5\"), \n    \n\n    \"com\": new Color(\"#e67c73\") \n\n}\nconst REMINDER_COLORS = { \n\t\/\/ \"리마인더 이름\": new Color(\"원하는 색 코드\")\n    \"Reminder\": new Color(\"#eb5582\"),\n\n    \"School\": new Color(\"#c8a772\") \n\n}\n\/\/ 📱📅❤️🧡💛💚💙💜 애플 캘린더 색상 코드 \n\/\/ 빨강색 : #eb5582\n\/\/ 주황색 : #fdac50\n\/\/ 노랑색 : #feda6a\n\/\/ 초록색 : #afe78e\n\/\/ 파랑색 : #7bc3fd\n\/\/ 보라색 : #bd77d7\n\/\/ 갈색 : #c8a772\n\n\/\/ 🔖🔖🔖일정 개수 설정 (위젯에 보여지는 일정)\n\/\/ 미디움 4개 기본 설정 \n\/\/ 너무 많으면 넘칩니다\nconst NUM_ITEMS_TO_SHOW = 4\n\n\/\/ 📅📅🕔 이벤트 기간\nconst period = 30; \/\/ 이벤트 불러올 기간(n일 후)\n\n\/\/ 👍🏻👍🏻✅ 모든 일정 끝났을 때 하단에 나오는 텍스트\nconst NO_ITEMS_MESSAGE = \"🧦도비 이즈 프리\" \n\n\/\/ 📅👍🏻✅ 하단 텍스트 크기 & 폰트\nconst finMessageSize = 14\nconst finMessageFont = \"DX유니고딕 70\"\n\n\/\/ 🪧💛❤️ 하단 텍스트 컬러 \nconst finMessageColor = new Color(\"#ffffff\")\n\n\n\n\/\/ 🌅🌄🌇🌌 날짜 포맷 부분 \n\/\/ 월 : M (1, 2, ... 10, 12)\n\/\/ MM (01, 02) MMM(1월, 2월...) MMMM MMMMM \n\/\/ 일 : d dd \n\/\/ 요일 : E EE(월, 화, 수 ...) EEEE EEEEE \n\n\/\/ 일정 포맷\n\/\/ '1월 1일' 월과 일 붙이고 싶으면 \"M월 d일\" 과 같이 사용\nconst eventFormat = \"MM\/dd(EE) hh:mm\"\nconst eventEndFormat = \"hh:mm\"\n\/\/ 올데이 포맷\nconst AlldayFormat = \"MM\/dd(EE)\"\n\/\/ 리마인더 포맷 \nconst reminderFormat = \"MM\/dd(EE) hh:mm\"\n\n\n\/\/ 🗓📆📅 ✊🏻노말 모드 지원✊🏻 \n\/\/ ㅁ와 ㅣ 일정 아이콘 빼고, 텍스트만 따로 컬러 지정하고 싶을 때\nconst normalEventColor = \"cal\"\n\/\/ \"cal\" : 캘린더 컬러 설정 따라가기 \n\/\/ \"custom\" : 커스텀 컬러 지정하기\n\/\/ ▐ ✨은행 업무✨ \n\/\/   08\/19(월) 10:00-11:00\nconst ITEM_NAME_COLOR = new Color(\"#ffffff\") \n\/\/ ▐ 은행 업무\n\/\/   ✨08\/19(월) 10:00-11:00✨\n\/\/ 🕔🕖🕡 일정 날짜 텍스트 컬러 \nconst ITEM_TIME_COLOR = new Color(\"#ffffff\")\n\n\n\/\/ 📅🪧🔖 일정 폰트 \nconst eventFont = \"DX유니고딕 70\"\n\/\/ 🗓📆📅 일정 크기 \nconst ITEM_NAME_SIZE = 11\n\/\/ 🗓📆📅 일정 투명도\nconst eventOpacity = 0.9\n\n\/\/ 🕐🕔🕚 일정 날짜 크기 \nconst ITEM_TIME_SIZE = 11\n\/\/ 🪧🏷 일정 날짜 폰트\nconst ITEM_TIME_FONT = \"DX유니고딕 30\"\n\/\/ ⏰💡🤍 일정 날짜 투명도 \nconst timeOpacity = 0.8\n\n\n\n\/\/ 📱📱🔳 위젯 '상 좌 하 우' 여백\n\/\/ 라지 모드의 경우 leading 값을 조정해서 왼쪽 여백을 주면\n\/\/ 전체적으로 여백이 맞습니다. 값을 바꿔보며 적용해보세요.\nconst top = 5\nconst leading = 10\nconst bottom = 5\nconst trailing = 10\n\n\/\/ 🪧🔖✨라지 모드일 때 변경 가능\n\/\/ ✋🏻🤚🏻left, right 모드 일정 스택 가로, 세로 크기 설정 \n\/\/ lStackWidth는 왼쪽 스택으로, 크기를 줄이면\n\/\/ 오른쪽 날짜 혹은 일정이 왼쪽으로 더 붙습니다\n\/\/ 개인 폰트, 텍스트 사이즈 설정에 따라 조정해주세요\nconst lStackWidth = 180\nconst lStackHeight = 15\n\nconst rStackWidth = 140\nconst rStackHeight = 15\n\n\n\n\n\/\/ 📅📵📵 캘린더 관련 \n\/\/ INTERNAL CONSTS\nconst DATE_FORMATTER = new DateFormatter()\nDATE_FORMATTER.dateFormat = 'ZZ'\nconst ALLDAY_FORMATTER = new DateFormatter()\n\nconst NOW = new Date()\n\nlet tZOffsetSec = (DATE_FORMATTER.string(new Date())\/100)*60*60\n\nconst oDate = new Date(2001,00,01).getTime(),date = new Date();   \n  let diff = ((new Date(date.getFullYear(),date.getMonth(),date.getDate())-oDate)\/1000)\n  diff=Number(diff)-tZOffsetSec\n\n\n\/\/ If we're running the script normally, go to the set calendar app\nif (!config.runsInWidget && !TEST_MODE) {\n    const appleDate = new Date('2001\/01\/01')\n    const timestamp = (NOW.getTime() - appleDate.getTime()) \/ 1000\n    const callback = new CallbackURL(CALENDAR_URL + timestamp)\n    callback.open()\n    Script.complete()\n} else { \/\/ Otherwise, work on the widget\n    \n    \/\/ Collect events and reminders to show \n    \/\/ Store custom objects here with the fields: id, name, startDate, endDate, dateIncludesTime, isReminder, calendarTitle\n    let itemsToShow = []\n\n\n    \/\/ Find future events that aren't all day, aren't canceled, and are part of the calendar list\n    let endDate = new Date();\n  endDate.setDate(endDate.getDate() + period);\n    \n    const events = \n\/\/     await CalendarEvent.thisWeek([])\n    await CalendarEvent.between(new Date(), endDate)\n\n\n    for (const event of events) {\n        if (event.endDate.getTime() > NOW.getTime()\n            && VISIBLE_CALENDARS.includes(event.calendar.title)\n            && !event.title.startsWith(\"Canceled:\")) {\n            itemsToShow.push({\n                id: event.identifier,\n                name: event.title,\n                startDate: event.startDate,\n                endDate: event.endDate,\n                dateIncludesTime: true,\n                isReminder: false,\n                calendarTitle: event.calendar.title,\n                isAllDay: event.isAllDay,\n            })\n        }\n    }\n    \/\/ Find today's reminders that are part of the reminder list\n    \/\/ NOTE: all-day reminders have their time set to 00:00 of the same day, but aren't returned with incompleteDueToday...\n    let queryStartTime = new Date(NOW)\n    queryStartTime.setDate(queryStartTime.getDate() - 1)\n    queryStartTime.setHours(23, 59, 59, 0)\n    let queryEndTime = new Date(NOW)\n    queryEndTime.setHours(23, 59, 59, 0)\n    \n    \n    const reminders = await Reminder.incompleteDueBetween(new Date(), endDate)\n     \n\/\/     const reminders = await Reminder.incompleteDueBetween(queryStartTime, queryEndTime)\n    for (const reminder of reminders) {\n        if (VISIBLE_REMINDERS.includes(reminder.calendar.title)) {\n            itemsToShow.push({\n                id: reminder.identifier,\n                name: reminder.title,\n                startDate: reminder.dueDate,\n                endDate: null,\n                dateIncludesTime: reminder.dueDateIncludesTime,\n                isReminder: true,\n                calendarTitle: reminder.calendar.title\n            })\n        }\n    }\n\n    \/\/ Sort and truncate them: events \/ timed reminders, in order, then all-day reminders\n    itemsToShow = itemsToShow.sort(sortItems).slice(0, NUM_ITEMS_TO_SHOW)\n    \n    \/\/ Lay out the widget!\n    let widget = new ListWidget()\n\n    if (bgMode == \"color\") {\n    \/\/ 🔖위젯 배경색상 지정하기\n    widget.backgroundColor = BACKGROUND_COLOR\n\t\n    } else if(bgMode == \"image\") {\n\t\n\t  \/\/ 🔖위젯 배경사진 불러오기\n      widget.backgroundImage = fm.readImage(fm.bookmarkedPath(bgname))\n    }\n\n    \n\n    \/\/ Add the top date and greeting\n    let topStack = widget.addStack()\n    topStack.layoutHorizontally()\n    topStack.topAlignContent()\n    \n    topStack.borderColor = new Color(\"#00ffff\")\n    topStack.borderWidth = 0\n    \/\/ Greeting is left aligned, date is right aligned\n    let greetingStack = topStack.addStack()\n    let greeting = greetingStack.addText(getGreeting())\n    greeting.textColor = GREETING_COLOR\n\/\/     greeting.font = Font.lightSystemFont(GREETING_SIZE)\n    greeting.font = new Font(GREETING_FONT, GREETING_SIZE)\n    greetingStack.borderColor = new Color(\"#00ffff\")\n    greetingStack.borderWidth = 0\n    \n    topStack.addSpacer()\n    \n    \/\/ 📆🗓📅 우측 상단 날짜 표기 방식 바꾸기 \n    \/\/ mm ee dd ... \n    \/\/ 📆🕔 1월 1일(목) 표기는 하단과 같음!\n    \/\/ \"MMM d\" + \"일 \" + \"(E)\"\n    let dateStack = topStack.addStack()\n    DATE_FORMATTER.dateFormat = dateFormat\n    let topDate = dateStack.addText(DATE_FORMATTER.string(NOW).toUpperCase())\n    topDate.textColor = DATE_COLOR\n    topDate.font = new Font(DateFont, DateSize)\n    \n\n\/\/ 🖇🔖💌 상단 메시지 ~ 하단 일정 사이 간격 설정\nconst topSpacer = 20\n\/\/ 폰트와 텍스트 크기에 따라 개인 커스텀\n\/\/ 🪧✨✨\n\/\/ 전부 자동 조정으로 설정 \n\n    \/\/ 🪧✨🔖 상단 메시지, 일정 사이 위 아래 간격\n    \/\/ 미리보기 미디움일 때\n    if (Mode_size == \"Medium\") {\n\t    widget.addSpacer()\n\/\/ \t\twidget.addSpacer(topSpacer)\n    } else if (Mode_size == \"Large\") {\n      widget.addSpacer()\n      }\n    \n\n\n  \/\/ ✊🏻노말 모드 일정이 위에, 날짜가 아래\n  if (mode == \"normal\") {\n\n  \/\/ If there is at least one item today\n   if (itemsToShow.length > 0) {\n\n      for (i = 0; i < itemsToShow.length; i++) {\n          \/\/ Add space between events\n          if (i != 0) {\n             \/\/ 일정과 일정 사이 위 아래 간격\n             widget.addSpacer(9)\n          }\n            \n          \/\/ 아이템 스택 \n          let itemStack = widget.addStack()\n          itemStack.layoutHorizontally()\n          itemStack.centerAlignContent()\n          itemStack.url = getItemUrl(itemsToShow[i])\n\n\n          \/\/ 일정 앞 ㅁ ㅣ 아이콘 넣기\n          let itemPrefix = itemStack.addText(formatItemPrefix(itemsToShow[i]))\n\n          \/\/📅📆☀️ 일정 아이콘 폰트&색상 \n          itemPrefix.font = Font.semiboldSystemFont(ITEM_NAME_SIZE)\n          \/\/ 일정 아이콘 색상\n          itemPrefix.textColor = getItemColor(itemsToShow[i])\n          \/\/ 일정 아이콘 투명도\n          itemPrefix.textOpacity = eventOpacity\n\t\n\t      \/\/ 일정 이름 넣기\n          let itemName = itemStack.addText(formatItemName(itemsToShow[i]))\n          itemName.lineLimit = 1\n          \/\/ 일정 이름 폰트\n          itemName.font = new Font (eventFont, ITEM_NAME_SIZE)\n\n            \n          \/\/ 노말 모드 지원 - 아이콘과 일정 이름 색상\n          if (normalEventColor == \"custom\") {\n\n\t      \/\/ 일정 이름 색상 - 지정 값\n          itemName.textColor = ITEM_NAME_COLOR\n\t\n          } else if (normalEventColor == \"cal\") {\n\t\n\t        \/\/ 일정 이름 색상 - 캘린더 색상 따라가기\n            itemName.textColor = getItemColor(itemsToShow[i])\n            } \n\n          \/\/ 일정 이름 투명도\n          itemName.textOpacity = eventOpacity\n\n          \/\/ 하나의 일정 이름과 날짜 사이 위 아래 간격\n          widget.addSpacer(7)\n\n          \/\/ 📎🕓 타임 스택 - 날짜 스택\n          let timeStack = widget.addStack()\n          timeStack.layoutHorizontally()\n          timeStack.centerAlignContent()\n          timeStack.url = getItemUrl(itemsToShow[i])\n\n          \/\/ 일정 이름에 맞춰서 공백 넣기\n          timeStack.addSpacer(12)\n\n          \/\/ 날짜 넣기\n          let timeDate = timeStack.addText(formatItemDate(itemsToShow[i]))\n          \/\/ 날짜 폰트\n          timeDate.font = new Font(ITEM_TIME_FONT, ITEM_TIME_SIZE)\n          \/\/ 날짜 컬러\n          timeDate.textColor = ITEM_TIME_COLOR\n          \/\/ 날짜 투명도\n          timeDate.textOpacity = timeOpacity\n\n        }\n    } else { \/\/ 일정 없을 때\n        \/\/ 중간에 공백 넣기 \n\/\/         widget.addSpacer(100)\n        \/\/ 🔖 하단 메시지\n        let message = widget.addText(NO_ITEMS_MESSAGE)\n        message.textColor = finMessageColor\n        message.font = new Font(finMessageFont, finMessageSize)\n    } \n    \n\/\/ 📱⭐️⭐️⭐️ 🤚🏻오른쪽 모드\n} else if (mode == \"right\") {\n    \n        \/\/ If there is at least one item today\n    if (itemsToShow.length > 0) {\n\n        \n        for (i = 0; i < itemsToShow.length; i++) {\n            \/\/ Add space between events\n            if (i != 0) {\n                \/\/ 일정 위 아래 간격\n                widget.addSpacer(9)\n            }\n            \n            \n            \/\/ \n            let eventStack = widget.addStack()\n            eventStack.layoutHorizontally()\n\/\/             eventStack.topAlignContent()\n\n\n            \/\/ 왼쪽 일정 스택\n            let itemStack = eventStack.addStack()\n            itemStack.layoutVertically()\n\/\/             itemStack.centerAlignContent()\n\/\/             itemStack.addSpacer()\n\n            itemStack.url = getItemUrl(itemsToShow[i])\n\/\/             itemStack.addSpacer(1)\n            \n            if (Mode_size == \"Large\") {\n            itemStack.size = new Size(lStackWidth, lStackHeight)\n\n            } else itemStack.size = new Size(180, 15)\n\n\/\/             itemStack.borderColor = new Color(\"#ffffff\")\n\/\/   itemStack.borderWidth = 0\n\n\n            \/\/ 아이콘 및 일정 추가\n            let itemPrefix = itemStack.addText(formatItemPrefix(itemsToShow[i]) + formatItemName(itemsToShow[i]))\n            \n            \/\/📅📆☀️ 아이콘 및 일정 이름 폰트&색상 \n            itemPrefix.font = new Font (eventFont, ITEM_NAME_SIZE)\n\/\/             itemPrefix.textColor = ITEM_NAME_COLOR\n            itemPrefix.textColor = getItemColor(itemsToShow[i])\n            itemPrefix.textOpacity = eventOpacity\n\n            \/\/ 오른쪽 날짜 스택\n            let rTimeStack = eventStack.addStack()\n            rTimeStack.layoutVertically()\n\/\/             rTimeStack.centerAlignContent()\n            rTimeStack.url = getItemUrl(itemsToShow[i])\n\n            if (Mode_size == \"Large\") {\n            rTimeStack.size = new Size(rStackWidth, rStackHeight)\n\n            } else rTimeStack.size = new Size(140, 15)\n\/\/             rTimeStack.borderColor = new Color(\"#ffff35\")\n\/\/             rTimeStack.borderWidth = 0\n\/\/   rTimeStack.setPadding(0, 0, 0, 0)\n\n            \/\/ 🕔📅 날짜, 시간\n            let itemDate = rTimeStack.addText(formatItemDate(itemsToShow[i]))\n            itemDate.font = new Font(ITEM_TIME_FONT, ITEM_TIME_SIZE)\n            itemDate.textColor = ITEM_TIME_COLOR\n\n            itemDate.textOpacity = timeOpacity\n\n        } \n\n    } else { \/\/ 일정 없을 때\n        \/\/ 중간에 공백 넣기 \n\/\/         widget.addSpacer(100)\n        \/\/ 🔖 하단 메시지\n        let message = widget.addText(NO_ITEMS_MESSAGE)\n        message.textColor = finMessageColor\n        message.font = new Font(finMessageFont, finMessageSize)\n    } \n\n\/\/ 📱⭐️⭐️⭐️ 🤚🏻왼쪽 모드 - 날짜가 왼쪽\n} else if (mode == \"left\") {\n\t\n\t        \/\/ If there is at least one item today\n    if (itemsToShow.length > 0) {\n\n        \n        for (i = 0; i < itemsToShow.length; i++) {\n            \/\/ Add space between events\n            if (i != 0) {\n                \/\/ 일정 위 아래 간격\n                widget.addSpacer(9)\n            }\n            \n            \/\/ \n            let eventStack = widget.addStack()\n            eventStack.layoutHorizontally()\n\/\/             eventStack.topAlignContent()\n\n\n            let rTimeStack = eventStack.addStack()\n            rTimeStack.layoutVertically()\n            rTimeStack.url = getItemUrl(itemsToShow[i])\n\/\/             rTimeStack.centerAlignContent()\n            rTimeStack.size = new Size(lStackWidth, lStackHeight)\n\/\/             rTimeStack.borderColor = new Color(\"#ffff35\")\n\/\/   rTimeStack.borderWidth = 0\n\/\/   rTimeStack.setPadding(0, 0, 0, 0)\n\n\n\n            \/\/ 🕔📅 날짜, 시간\n            let itemDate = rTimeStack.addText(formatItemDate(itemsToShow[i]))\n            itemDate.font = new Font(ITEM_TIME_FONT, ITEM_TIME_SIZE)\n            itemDate.textColor = ITEM_TIME_COLOR\n\n            itemDate.textOpacity = timeOpacity\n\n            let itemStack = eventStack.addStack()\n            itemStack.layoutVertically()\n\/\/             itemStack.centerAlignContent()\n\/\/             itemStack.addSpacer()\n\n\n            itemStack.url = getItemUrl(itemsToShow[i])\n            itemStack.addSpacer(1)\n\n            itemStack.size = new Size(rStackWidth, rStackHeight)\n\/\/             itemStack.borderColor = new Color(\"#ffffff\")\n\/\/   itemStack.borderWidth = 0\n\n\n            \n            \/\/ 이벤트 아이콘 및 일정\n            let itemPrefix = itemStack.addText(formatItemPrefix(itemsToShow[i]) + formatItemName(itemsToShow[i]))\n\/\/             let itemPrefix = itemStack.addStack()\n            \n\n            \/\/📅📆☀️ 아이콘 및 일정 이름 폰트&색상 \n            itemPrefix.font = new Font (eventFont, ITEM_NAME_SIZE)\n\/\/             itemPrefix.textColor = ITEM_NAME_COLOR\n            itemPrefix.textColor = getItemColor(itemsToShow[i])\n            itemPrefix.textOpacity = eventOpacity\n\/\/             itemPrefix.leftAlignText()\n\n\n\n            \/\/ 일정 아이콘과 일정 이름 사이 좌우 간격\n\/\/             itemStack.addSpacer(14)\n            \/*\n            \/\/ 일정 이름 넣기\n            let itemName = itemStack.addText(formatItemName(itemsToShow[i]))\n            itemName.lineLimit = 1\n            \/\/ 일정 이름 폰트\n            itemName.font = new Font (eventFont, ITEM_NAME_SIZE)\n            \/\/ 일정 이름 색상 - 지정 값\n            itemName.textColor = ITEM_NAME_COLOR\n            \/\/ 일정 이름 색상 - 캘린더 색상 따라가기\n\/\/             itemName.textColor = getItemColor(itemsToShow[i])\n            \/\/ 일정 이름 투명도\n            itemName.textOpacity = 0.9\n*\/\n\n\n        } \n\n\n    } else { \/\/ 일정 없을 때\n        \/\/ 중간에 공백 넣기 \n\/\/         widget.addSpacer(100)\n        \/\/ 🔖 하단 메시지\n        let message = widget.addText(NO_ITEMS_MESSAGE)\n        message.textColor = finMessageColor\n        message.font = new Font(finMessageFont, finMessageSize)\n    } \t\n}\n\n\n        \n\n    \/\/ 📱📎🖥 위젯 전체 간격\n    \/\/ 상 좌 하 우\n    widget.setPadding(top, leading, bottom, trailing)\n\n    widget.spacing = -3\n    Script.setWidget(widget)\n    \n\n    if (Mode_size == \"Small\") {\n    widget.presentSmall()\n      \n    } else if (Mode_size == \"Medium\") { \n      widget.presentMedium()\n      \n    } else if (Mode_size == \"Large\") { \n      widget.presentLarge()\n      \n    } \n    Script.complete()\n}\n\n\n\n\nfunction sortItems(first, second) {\n    if (first.dateIncludesTime === false && second.dateIncludesTime === false) {\n        return 0\n    } else if (first.dateIncludesTime === false) {\n        return 1\n    } else if (second.dateIncludesTime === false) {\n        return -1\n    } else {\n        return first.startDate - second.startDate\n    }\n}\n\n\nfunction formatItemName(item) {\n    return item.name\n}\n\nfunction formatItemPrefix(item) {\n    if (item.isReminder === false) {\n        return \"▐ \"\n    } else {\n        return \"□ \"\n    }\n}\n\n\n\/\/ 이벤트, 리마인더 포맷팅\nfunction formatItemDate(item) {\n    if (item.dateIncludesTime === true) {\n        if (item.isReminder === false) {\n            DATE_FORMATTER.dateFormat = eventFormat\n            \n            ALLDAY_FORMATTER.dateFormat = AlldayFormat;\n\n            \n            \/\/ \"▐ \" 올데이 일정\n            if (item.isAllDay) {\n\t\n\t\n              return \"\" +  ALLDAY_FORMATTER.string(item.startDate);\n\n\n            \/\/ 기간 일정 \n            } else if (item.dateIncludesTime === true) {\n              let startDate = DATE_FORMATTER.string(item.startDate)\n            DATE_FORMATTER.dateFormat = eventEndFormat\n            let endDate = DATE_FORMATTER.string(item.endDate)\n            return \"\" + startDate + \"-\" + endDate\n\n            }\n        } else if (item.dateIncludesTime === true && item.isReminder === true)  {\n            DATE_FORMATTER.dateFormat = reminderFormat\n            let startDate = DATE_FORMATTER.string(item.startDate)\n\n\/\/             DATE_FORMATTER.dateFormat = \"hh:mma\"\n\/\/             let endTime = DATE_FORMATTER.string(item.endDate)\n            \/\/ \"□ \" \n            return \"\" + startDate\n        }\n    } else  {\n        return \"□ TO-DO\" \/\/ Not a TODO in the code, literally return that\n    }\n}\n\nfunction getItemUrl(item) {\n    if (item.isReminder === false) {\n\t\n        const nDate = item.startDate.getTime()\n        var diff = ((nDate - oDate)\/1000)\n        diff = Number(diff) - tZOffsetSec\n\t\n        return CALENDAR_URL.url = appURL + diff\n\/\/ \"calshow:\" \n\n\n\/\/ CALENDAR_URL + item.id\n\n    } else {\n\t\n\t    const nDate = item.startDate.getTime()\n        var diff = ((nDate - oDate)\/1000)\n        diff = Number(diff) - tZOffsetSec\n\t\n\/\/         return REMINDERS_URL.url = \"x-apple-reminderkit:\/\/\"\n        return REMINDERS_URL + item.id\n    }\n}\n\nfunction getItemColor(item) {\n    if (item.isReminder === true) {\n        return REMINDER_COLORS[item.calendarTitle]\n    } else {\n        return CALENDAR_COLORS[item.calendarTitle]\n    }\n}\n\n\n\n\n\/\/ Determines if two dates occur on the same hour\n\/\/ function sameHour(d1, d2) {\n\/\/     return d1.getFullYear() === d2.getFullYear() &&\n\/\/         d1.getMonth() === d2.getMonth() &&\n\/\/         d1.getDate() === d2.getDate() &&\n\/\/         d1.getHours() === d2.getHours()\n\/\/ }",
  "share_sheet_inputs" : [

  ]
}